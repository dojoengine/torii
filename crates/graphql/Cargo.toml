[package]
description = "Torii graphql implementation."
edition.workspace = true
license-file.workspace = true
name = "torii-graphql"
repository.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow.workspace = true
async-graphql = { version = "7.0.11", features = [ "chrono", "dynamic-schema" ] }
async-graphql-warp = "7.0.11"
async-recursion = "1.0.5"
base64.workspace = true
chrono.workspace = true
convert_case = "0.6.0"
dojo-types.workspace = true
regex.workspace = true
serde.workspace = true
serde_json.workspace = true
sqlx.workspace = true
starknet.workspace = true
starknet-core.workspace = true
starknet-crypto.workspace = true
strum.workspace = true
strum_macros.workspace = true
thiserror.workspace = true
tokio.workspace = true
tokio-stream = "0.1.11"
torii-broker.workspace = true
torii-sqlite.workspace = true
torii-storage.workspace = true
torii-messaging.workspace = true
tracing.workspace = true
url.workspace = true
warp.workspace = true
handlebars = "6.3.2"
[dev-dependencies]
indexmap.workspace = true
torii-typed-data.workspace = true
camino.workspace = true
dojo-test-utils = { workspace = true, features = [ "build-examples" ] }
dojo-utils.workspace = true
dojo-world = { workspace = true, features = [ "ipfs" ] }
katana-runner.workspace = true
serial_test = "2.0.0"
starknet.workspace = true
starknet-crypto.workspace = true
tempfile.workspace = true
toml.workspace = true
# TODO: check if it's better to actually reexpose scarb in sozo-scarbext to
# avoid having to depend on scarb here.
scarb-interop.workspace = true
scarb-metadata-ext.workspace = true
torii-processors = { workspace = true }
torii-indexer.workspace = true
torii-indexer-fetcher.workspace = true
torii-cache.workspace = true
torii-storage.workspace = true
